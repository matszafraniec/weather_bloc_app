// Mocks generated by Mockito 5.4.4 from annotations
// in weather_bloc_app/test/bloc/favorite_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:weather_bloc_app/data/models/general_error/domain/general_error.dart'
    as _i5;
import 'package:weather_bloc_app/data/models/weather_current_conditions/domain/location_info.dart'
    as _i6;
import 'package:weather_bloc_app/data/repositories/favorites_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FavoritesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockFavoritesRepository extends _i1.Mock
    implements _i3.FavoritesRepository {
  @override
  _i4.Future<_i2.Either<_i5.GeneralError, void>> add(_i6.LocationInfo? item) =>
      (super.noSuchMethod(
        Invocation.method(
          #add,
          [item],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.GeneralError, void>>.value(
            _FakeEither_0<_i5.GeneralError, void>(
          this,
          Invocation.method(
            #add,
            [item],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.GeneralError, void>>.value(
                _FakeEither_0<_i5.GeneralError, void>(
          this,
          Invocation.method(
            #add,
            [item],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.GeneralError, void>>);

  @override
  _i4.Future<_i2.Either<_i5.GeneralError, void>> delete(
          _i6.LocationInfo? item) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [item],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.GeneralError, void>>.value(
            _FakeEither_0<_i5.GeneralError, void>(
          this,
          Invocation.method(
            #delete,
            [item],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.GeneralError, void>>.value(
                _FakeEither_0<_i5.GeneralError, void>(
          this,
          Invocation.method(
            #delete,
            [item],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.GeneralError, void>>);

  @override
  _i4.Stream<List<_i6.LocationInfo>> queryAllListener() => (super.noSuchMethod(
        Invocation.method(
          #queryAllListener,
          [],
        ),
        returnValue: _i4.Stream<List<_i6.LocationInfo>>.empty(),
        returnValueForMissingStub: _i4.Stream<List<_i6.LocationInfo>>.empty(),
      ) as _i4.Stream<List<_i6.LocationInfo>>);
}
